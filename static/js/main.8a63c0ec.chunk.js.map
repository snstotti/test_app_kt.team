{"version":3,"sources":["redux/reducer/taskReduser.js","icons/pencil.svg","icons/trash.svg","components/listRendering/EditInput.js","components/listRendering/Setedit.js","components/listRendering/ListRendering.js","icons/arrowRepeat.svg","components/reversButton/ReverseButton.js","components/searchInput/SearchInput.js","components/pagination/Pagination.js","App.js","reportWebVitals.js","redux/store/store.js","index.js"],"names":["ADD_TASK_LIST","SET_TEXT","REMOVE_TASK_FROM_LIST","ON_EDIT","EDIT_TEXT_TASK","FILTER_TASK","FILTER_TEXT","REVERSE_LIST_TASK","SET_CURRENT_PAGE","SET_HANDLER_PAGE","SET_COMPLETED","defaultState","entryField","searchFiled","isReversArr","taskList","item","id","isEdit","completed","searchShowNews","currentPage","setText","text","type","onEdit","EditInput","idItem","task","dispatch","useDispatch","taskEditHandler","e","target","value","editText","editItemId","onSubmit","preventDefault","openEdit","className","onChange","SetEdit","params","removeItem","removeTask","isCompleted","checked","setCompleted","elem","classSuccses","htmlFor","checkbox","src","pencil","alt","onClick","trash","ListRendering","list","numberTasksPerPage","start","end","slice","map","el","i","index","num","ReverseButton","reverseList","repeat","console","log","SearchInput","searchHandleInput","partOfText","searchText","placeholder","aria-label","aria-describedby","Pagination","pagesCount","pages","push","getCurrentPage","page","handlerPage","setHandlerPage","paginationPage","activeClass","href","App","useSelector","state","taskStore","isReverse","listFilter","filed","newId","Date","now","Math","ceil","length","setClickTask","newTask","addTask","listTask","useEffect","even","style","rows","textEntryHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","newArr","toLowerCase","indexOf","reverse","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a63c0ec.chunk.js","sourcesContent":["const ADD_TASK_LIST = 'ADD_TASK_LIST' \r\nconst SET_TEXT = 'SET_TEXT' \r\nconst REMOVE_TASK_FROM_LIST = 'REMOVE_TASK_FROM_LIST' \r\nconst EDIT_TASK_FROM_LIST = 'EDIT_TASK_FROM_LIST' \r\nconst ON_EDIT = 'ON_EDIT' \r\nconst EDIT_TEXT_TASK = 'EDIT_TEXT_TASK' \r\nconst FILTER_TASK = 'FILTER_TASK' \r\nconst FILTER_TEXT = 'FILTER_TEXT' \r\nconst REVERSE_LIST_TASK = 'REVERSE_LIST_TASK' \r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE' \r\nconst SET_HANDLER_PAGE = 'SET_HANDLER_PAGE' \r\nconst SET_COMPLETED = 'SET_COMPLETED' \r\n\r\nconst defaultState = {\r\n    entryField:'',\r\n    searchFiled: '',\r\n    isReversArr: false,\r\n    taskList: [\r\n        {item:'task1',id:1,isEdit:false,completed:false},\r\n        {item:'task2',id:2,isEdit:false,completed:false},\r\n        {item:'task3',id:3,isEdit:false,completed:false},\r\n        {item:'task4',id:4,isEdit:false,completed:false},\r\n        {item:'task5',id:5,isEdit:false,completed:false},\r\n        {item:'task6',id:6,isEdit:false,completed:false},\r\n        {item:'task7',id:7,isEdit:false,completed:false},\r\n        {item:'task8',id:8,isEdit:false,completed:false},\r\n        {item:'task9',id:9,isEdit:false,completed:false},\r\n        {item:'task10',id:10,isEdit:false,completed:false},\r\n        {item:'task11',id:11,isEdit:false,completed:false},\r\n        {item:'task12',id:12,isEdit:false,completed:false},\r\n    ],\r\n    searchShowNews:[],\r\n    currentPage: 1\r\n    \r\n}\r\n\r\nexport default function taskReduser (state=defaultState, action){\r\n    \r\n    switch(action.type){\r\n\r\n        case ADD_TASK_LIST:\r\n            let newTask={\r\n                item:action.task,\r\n                id: action.newId,\r\n                isEdit:false,\r\n                completed:false\r\n            }    \r\n\r\n            return {\r\n                ...state, \r\n                taskList: [newTask, ...state.taskList]\r\n            }\r\n        case EDIT_TEXT_TASK:\r\n            return {\r\n                ...state, \r\n                taskList: state.taskList.map(el=>{\r\n                    if(el.id === action.editItemId){\r\n                      el.item = action.editText\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case REMOVE_TASK_FROM_LIST:\r\n            \r\n            return {\r\n                ...state, \r\n                taskList: state.taskList.filter(el=>el.id !== action.id)\r\n            }\r\n        case ON_EDIT:\r\n            \r\n            return {\r\n                ...state, \r\n                taskList: state.taskList.map(el=>{\r\n                    if(el.id === action.id){\r\n                      el.isEdit = !el.isEdit\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case SET_TEXT:\r\n            return {\r\n                ...state, \r\n                entryField: action.text\r\n            }\r\n        case FILTER_TEXT:\r\n            return {\r\n                ...state, \r\n                searchFiled: action.searchText\r\n            }\r\n        case FILTER_TASK:\r\n            if (action.even === '') {\r\n                return{ ...state}\r\n            }\r\n             const newArr = state.taskList.filter((i) => {\r\n                return i.item.toLowerCase().indexOf(action.even.toLowerCase()) > -1\r\n            })\r\n            return {...state, searchShowNews: newArr}\r\n            \r\n        case REVERSE_LIST_TASK:\r\n            return {\r\n                ...state,\r\n                isReversArr: action.isReverse\r\n                , taskList: state.taskList.reverse()\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage:action.page\r\n            }\r\n        case SET_COMPLETED:\r\n            return {\r\n                ...state, \r\n                taskList: state.taskList.map(el=>{\r\n                    if(el.id === action.id){\r\n                      el.completed = action.completed\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case SET_HANDLER_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage:action.handlerPage\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addTask =(task,newId)=>({type:ADD_TASK_LIST,task,newId})\r\nexport const setText =(text)=>({type:SET_TEXT,text})\r\nexport const removeTask =(id)=>({type:REMOVE_TASK_FROM_LIST,id})\r\nexport const editTask =(newTask)=>({type:EDIT_TASK_FROM_LIST,newTask})\r\nexport const onEdit =(id)=>({type:ON_EDIT,id})\r\nexport const editTextTask =(editText,editItemId)=>({type:EDIT_TEXT_TASK,editText,editItemId})\r\nexport const filterText =(searchText)=>({type:FILTER_TEXT,searchText})\r\nexport const filterTask =(even)=>({type:FILTER_TASK,even})\r\nexport const reverseList =(isReverse)=>({type:REVERSE_LIST_TASK,isReverse})\r\nexport const setCurrentPage =(page)=>({type:SET_CURRENT_PAGE,page})\r\nexport const setHandlerPage =(handlerPage)=>({type:SET_HANDLER_PAGE,handlerPage})\r\nexport const setCompleted =(completed,id)=>({type:SET_COMPLETED,completed,id})\r\n\r\n","export default __webpack_public_path__ + \"static/media/pencil.cbd100da.svg\";","export default __webpack_public_path__ + \"static/media/trash.e33ca2c9.svg\";","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { onEdit, editTextTask} from '../../redux/reducer/taskReduser';\r\n\r\n\r\nconst EditInput = ({idItem,task}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const openEdit=(e,task,idItem)=>{\r\n        if(!task){return e.preventDefault()}\r\n        dispatch(onEdit(idItem))\r\n        e.preventDefault()\r\n    }\r\n    const taskEditHandler =(e,idItem)=>{\r\n        let text = e.target.value\r\n        dispatch(editTextTask(text,idItem))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e)=>openEdit(e,task,idItem)}>\r\n        <div className=\"p-1 border bg-light d-flex justify-content-between input-group\">\r\n           \r\n            <input \r\n                type='text' \r\n                className=\"form-control\" \r\n                value={task}\r\n                onChange={(e)=>taskEditHandler(e,idItem)} \r\n                 />\r\n            <button className=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-addon2\">Add</button>\r\n            \r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditInput\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport pencil from '../../icons/pencil.svg';\r\nimport trash from '../../icons/trash.svg';\r\nimport { removeTask,onEdit, setCompleted} from '../../redux/reducer/taskReduser';\r\nimport EditInput from './EditInput';\r\n\r\n\r\nexport const SetEdit = ({params,id,task,completed}) => {\r\n\r\n   \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const removeItem=(id)=>{\r\n        dispatch(removeTask(id))\r\n    }\r\n    const openEdit=(id)=>{\r\n        dispatch(onEdit(id))\r\n    }\r\n    const isCompleted=(e,id)=>{\r\n        let value = e.target.checked\r\n        \r\n        dispatch(setCompleted(value,id))\r\n    }\r\n\r\n    let checkbox = (elem, id)=>{\r\n\r\n        let classSuccses = completed ? \"form-check-label text-success fw-bold\" : \"form-check-label\"\r\n\r\n        return(\r\n            <form className=\"form-check\" >\r\n                <input onChange={(e)=>isCompleted(e,id)} checked={completed} className=\"form-check-input\" type=\"checkbox\"/>\r\n                <label className={classSuccses} htmlFor=\"flexCheckDefault\">\r\n                   {elem}\r\n                </label>\r\n            </form>\r\n        )\r\n    }\r\n        \r\n    \r\n  \r\n\r\n    if (params) {return <EditInput idItem={id} task={task} />}\r\n       \r\n    return (\r\n        <div className=\"p-2 m-1 border bg-light d-flex justify-content-between\">\r\n            {checkbox(task, id)}\r\n            <div className=\"iconEdit\" >\r\n                <img\r\n                    src={pencil}\r\n                    alt='edit'\r\n                    className=\"ps-2\"\r\n                    onClick={() => { openEdit(id) }} />\r\n                <img\r\n                    src={trash}\r\n                    alt='trash'\r\n                    className=\"ps-2\"\r\n                    onClick={() => { removeItem(id) }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './listRendering.css'\r\nimport { SetEdit } from \"./Setedit\";\r\n\r\n\r\nconst ListRendering = ({list,currentPage,numberTasksPerPage}) => {\r\n\r\n    \r\n    \r\n    let start = (currentPage - 1 ) * numberTasksPerPage\r\n    let end = start + numberTasksPerPage\r\n  \r\n    \r\n\r\n    let newTaskList = list.slice(start,end)\r\n    \r\n   return newTaskList.map((el,i) => {\r\n        return (\r\n            <div className=\"row gx-5 listItem \" key={el.id}>\r\n                <div className=\"col\">\r\n                    <SetEdit\r\n                        index={i}\r\n                        params={el.isEdit}\r\n                        id={el.id}\r\n                        task={el.item}\r\n                        num={i + 1}\r\n                        completed={el.completed} />\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default ListRendering","export default __webpack_public_path__ + \"static/media/arrowRepeat.372b6a58.svg\";","import React from 'react'\r\nimport repeat from '../../icons/arrowRepeat.svg'\r\nimport './reverseButton.css'\r\n\r\nconst ReverseButton = ({reverseList}) => {\r\n\r\n    return(\r\n        <img onClick={reverseList} src={repeat} alt='icon' className='reverse-icon' />\r\n    )\r\n}\r\n\r\nexport default ReverseButton\r\n\r\nconsole.log();","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { filterText } from '../../redux/reducer/taskReduser'\r\n\r\nconst SearchInput = ({searchFiled}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const searchHandleInput=(e)=>{\r\n        let partOfText = e.target.value\r\n        dispatch(filterText(partOfText))\r\n    }\r\n        \r\n    return (\r\n            <div className=\"input-group mt-2 \">\r\n                <input\r\n                    onChange={(e)=>searchHandleInput(e)}\r\n                    value={searchFiled}\r\n                    type=\"text\" className=\"form-control\" placeholder=\"Search filed\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\r\n                \r\n            </div>\r\n      \r\n    )\r\n}\r\nexport default SearchInput","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setCurrentPage,setHandlerPage } from '../../redux/reducer/taskReduser'\r\n\r\n\r\nconst Pagination =({pagesCount,currentPage})=>{\r\n  const dispatch = useDispatch()\r\n  \r\n  let pages = []\r\n\r\n  for (let index = 0; index < pagesCount; index++) {\r\n   pages.push(index)\r\n  }\r\n\r\n  const getCurrentPage =(e,i)=>{\r\n    dispatch(setCurrentPage(i))\r\n    e.preventDefault()\r\n  }\r\n \r\n\r\n  const handlerPage =(e,i)=>{\r\n    if(i<1 || i>pagesCount) return\r\n    dispatch(setHandlerPage(i))\r\n    \r\n    e.preventDefault()\r\n  }\r\n\r\n  \r\n\r\n  let paginationPage = pages.map(el=>{\r\n    let activeClass = currentPage === el+1 ? 'page-item active' : 'page-item'\r\n    return (\r\n      <li\r\n        onClick={(e)=>getCurrentPage(e,el + 1)}\r\n        key={el}\r\n        className={activeClass}>\r\n        <a className= \"page-link\" href={`/${el + 1}`}>{el + 1}</a>\r\n      </li>\r\n   )\r\n  })\r\n    \r\n\r\nreturn(\r\n    <nav aria-label=\"Page navigation example\">\r\n  <ul className=\"pagination\">\r\n    <li className=\"page-item\"><a\r\n      onClick={(e)=>handlerPage(e,currentPage - 1)}\r\n      className=\"page-link\" href=\"/#\">Previous</a></li>\r\n    {paginationPage}\r\n    <li className=\"page-item\"><a\r\n      onClick={(e)=>handlerPage(e,currentPage + 1)}\r\n      className=\"page-link\" href=\"/#\">Next</a></li>\r\n  </ul>\r\n</nav>\r\n)\r\n}\r\n\r\nexport default Pagination","import { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { addTask, setText, reverseList, filterTask } from './redux/reducer/taskReduser';\nimport ListRendering from './components/listRendering/ListRendering';\nimport ReverseButton from './components/reversButton/ReverseButton';\nimport SearchInput from './components/searchInput/SearchInput';\nimport Pagination from './components/pagination/Pagination';\nimport {  useEffect } from 'react';\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const list = useSelector(state => state.taskStore.taskList)\n  \n  const currentPage = useSelector(state => state.taskStore.currentPage)\n  const isReverse = useSelector(state => state.taskStore.isReversArr)\n  const searchFiled = useSelector(state => state.taskStore.searchFiled)\n  const listFilter = useSelector(state => state.taskStore.searchShowNews)\n  const filed = useSelector(state => state.taskStore.entryField)\n\n  let newId = Date.now()\n  let numberTasksPerPage = 10\n  let pagesCount = Math.ceil(list.length / numberTasksPerPage)\n\n  \n\n  \n\n  const setClickTask = (e, newTask, id) => {\n    if (!newTask) { return e.preventDefault() }\n    dispatch(addTask(newTask, id))\n    dispatch(setText(''))\n    e.preventDefault()\n  }\n  const textEntryHandler = (e) => {\n    let text = e.target.value\n    dispatch(setText(text))\n  }\n\n  const listTask = searchFiled ? listFilter : list\n\n  useEffect(() => {\n    dispatch(filterTask(searchFiled))\n  }, [searchFiled, dispatch, isReverse])\n\n  \n  return (\n    <div className=\"container\">\n      <div className='wrapper p-3' style={{ \"width\": 400, \"margin\": \"0 auto\" }}>\n\n        <div>\n          <form onSubmit={(e) => setClickTask(e, filed, newId)}>\n            <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Задачи</label>\n            <input\n              type='text'\n              value={filed}\n              className=\"form-control\"\n              rows=\"3\"\n              onChange={(e) => textEntryHandler(e)} />\n            <button type=\"submit\" className=\"mt-2 btn btn-success\">Add task</button>\n          </form>\n\n          <SearchInput searchFiled={searchFiled} />\n\n          <ReverseButton reverseList={() => dispatch(reverseList(!isReverse))} />\n\n        </div>\n\n        <ListRendering\n          list={listTask}\n          currentPage={currentPage}\n          pagesCount={pagesCount}\n          numberTasksPerPage={numberTasksPerPage} />\n\n        <Pagination \n          currentPage={currentPage}\n          pagesCount={pagesCount}\n           />\n      </div>\n\n      \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport taskReduser from \"../reducer/taskReduser\";\r\n\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    taskStore: taskReduser\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './redux/store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}